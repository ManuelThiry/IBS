@page
@using IBS_Europe.Domains
@model IBS_Europe.App.Pages.BrokerSpace
@{
    ViewData["Title"] = "Espace Courtier";
    @Html.Partial("_DeleteConfirmationModal")
    @Html.Partial("_AddBrokerModal", Model.Input)
}

<section class="text-center p-4 bg-light">
    <div class="d-flex justify-content-center align-items-center mt-1">
        <h2 class=" fw-bold">Espace courtiers</h2>
        @if (User.Identity.IsAuthenticated)
        {
            <form method="post" asp-page-handler="AddBroker">
                <button class="button-1 ms-3"><i class="fas fa-plus"></i></button>
            </form>
            
        }
    </div>

    <!-- Section Brokers General Lists -->
    <div class="row d-flex justify-content-center flex-wrap mt-4" style="max-width: 80%; margin: auto;">
        @foreach (var broker in Model.BrokersGeneralLists)
        {
            <div class="col-lg-3 col-md-3 col-sm-4 col-6 mb-4">
                <div class="card shadow-lg h-100 border-0 rounded-lg">
                    <div class="card-body text-center p-1 position-relative">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button onclick="openDeleteModal('@broker.Id')" type="button" class="btn-close position-absolute top-0 end-0 mt-2 me-2" aria-label="Close" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal"></button>
                        }

                        <!-- PDF Icon -->
                        <a href="@broker.Path" target="_blank" class="text-decoration-none">
                            <i class="fas fa-file-pdf fa-2x mb-1 text-danger"></i>
                        </a>

                        <!-- Document name editable or not based on authentication -->
                        <div class="document-name-container">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="d-flex justify-content-center align-items-center">
                                    <form method="post" asp-page-handler="Switch" class="d-inline">
                                        <input type="hidden" name="direction" value="left" />
                                        <input type="hidden" name="id" value="@broker.Id" />
                                        <button type="submit" class="btn p-0 me-2" style="border: none; background: none;">
                                            <i class="fas fa-chevron-left fs-5 text-muted"></i>
                                        </button>
                                    </form>

                                    <!-- Editable document name -->
                                    <span id="brokerNameDisplay_@broker.Id" onclick="enableEdit('@broker.Id', '@broker.Name')" class="editable-text d-block text-center fs-6 fw-semibold" style="cursor: pointer;">
                                        @broker.Name
                                    </span>

                                    <input type="text" id="brokerNameInput_@broker.Id" class="form-control text-center document-name-input d-none" value="@broker.Name" onkeydown="handleNameEdit(event, '@broker.Id', '@broker.Name')" />

                                    <form method="post" asp-page-handler="Switch" class="d-inline">
                                        <input type="hidden" name="direction" value="right" />
                                        <input type="hidden" name="id" value="@broker.Id" />
                                        <button type="submit" class="btn p-0 ms-2" style="border: none; background: none;">
                                            <i class="fas fa-chevron-right fs-5 text-muted"></i>
                                        </button>
                                    </form>
                                </div>
                            }
                            else
                            {
                                <span class="d-block fs-6 fw-semibold">
                                    @broker.Name
                                </span>
                            }

                            <!-- Validation message for this broker -->
                            @Html.ValidationMessage($"brokerName_{broker.Id}", "", new { @class = "text-danger small" })
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Section Categories -->
    <div class="category-section mt-2">
        <form method="post" class="d-flex justify-content-center flex-wrap gap-3">
            @foreach (var category in Enum.GetValues(typeof(IBS_Europe.Domains.Category)))
            {
                if (category.Equals(IBS_Europe.Domains.Category.Généralistes))
                {
                    continue;
                }
                var integer = (int)category;
                <button type="submit" name="selectedCategory" value="@integer" class="btn @(@Model.SelectedCategory == integer ? "btn-primary" : "btn-outline-primary") m-1" style="min-width: 8em;">
                    @category
                </button>
            }
        </form>

        <!-- Section Brokers Lists for Selected Category -->
        <div class="row d-flex justify-content-center flex-wrap mt-3" style="max-width: 80%; margin: auto;">
            @foreach (var broker in Model.BrokersLists)
            {
                <div class="col-lg-3 col-md-3 col-sm-4 col-6 mb-4">
                    <div class="card shadow-lg h-100 border-0 rounded-4">
                        <div class="card-body text-center p-1 position-relative">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <button onclick="openDeleteModal('@broker.Id')" type="button" class="btn-close position-absolute top-0 end-0 mt-2 me-2" aria-label="Close" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal"></button>
                            }

                            <!-- PDF Icon -->
                            <a href="@broker.Path" target="_blank" class="text-decoration-none">
                                <i class="fas fa-file-pdf fa-2x mb-1 text-danger"></i>
                            </a>

                            <!-- Editable or non-editable document name -->
                            <div class="document-name-container">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <div class="d-flex justify-content-center align-items-center">
                                        <form method="post" asp-page-handler="Switch" class="d-inline">
                                            <input type="hidden" name="direction" value="left" />
                                            <input type="hidden" name="id" value="@broker.Id" />
                                            <button type="submit" class="btn p-0 me-2" style="border: none; background: none;">
                                                <i class="fas fa-chevron-left fs-5 text-muted"></i>
                                            </button>
                                        </form>

                                        <span id="brokerNameDisplay_@broker.Id" onclick="enableEdit('@broker.Id', '@broker.Name')" class="editable-text d-block fs-6 fw-semibold" style="cursor: pointer;">
                                            @broker.Name
                                        </span>

                                        <input type="text" id="brokerNameInput_@broker.Id" class="form-control text-center document-name-input d-none" value="@broker.Name" onkeydown="handleNameEdit(event, '@broker.Id', '@broker.Name')" />

                                        <form method="post" asp-page-handler="Switch" class="d-inline">
                                            <input type="hidden" name="direction" value="right" />
                                            <input type="hidden" name="id" value="@broker.Id" />
                                            <button type="submit" class="btn p-0 ms-2" style="border: none; background: none;">
                                                <i class="fas fa-chevron-right fs-5 text-muted"></i>
                                            </button>
                                        </form>
                                    </div>
                                }
                                else
                                {
                                    <span class="d-block fs-6 fw-semibold">
                                        @broker.Name
                                    </span>
                                }

                                <!-- Validation message for this broker -->
                                @Html.ValidationMessage($"brokerName_{broker.Id}", "", new { @class = "text-danger small" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            var isAddBroker = '@Model.IsAddBrokerAction';
            if (isAddBroker === 'True') {
                var modal = new bootstrap.Modal(document.getElementById('addBrokerModal'));
                modal.show();
            }
        });

        function openDeleteModal(id) {
            document.getElementById("brokerId").value = id;
        }

        document.addEventListener('click', function (event) {
            const activeInput = document.querySelector('.document-name-input:not(.d-none)');
            if (activeInput && !activeInput.contains(event.target) && !event.target.classList.contains('editable-text')) {
                const id = activeInput.id.split('_')[1];
                activeInput.classList.add('d-none');
                const nameDisplayElement = document.getElementById(`brokerNameDisplay_${id}`);
                nameDisplayElement.classList.remove('d-none');
            }
        });

        function enableEdit(id, oldName) {
            const nameDisplayElement = document.getElementById(`brokerNameDisplay_${id}`);
            nameDisplayElement.classList.add('d-none');
            const nameInputElement = document.getElementById(`brokerNameInput_${id}`);
            nameInputElement.classList.remove('d-none');
            nameInputElement.focus();
        }

        function handleNameEdit(event, id, oldName) {
            if (event.key === "Enter") {
                const inputElement = event.target;
                const newName = inputElement.value;

                if (newName !== oldName) {
                    const form = document.createElement("form");
                    form.method = "POST";
                    form.action = "/BrokerSpace?handler=Update";

                    const tokenInput = document.createElement("input");
                    tokenInput.type = "hidden";
                    tokenInput.name = "__RequestVerificationToken";
                    tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    form.appendChild(tokenInput);

                    const idInput = document.createElement("input");
                    idInput.type = "hidden";
                    idInput.name = "id";
                    idInput.value = id;
                    form.appendChild(idInput);

                    const newNameInput = document.createElement("input");
                    newNameInput.type = "hidden";
                    newNameInput.name = "newName";
                    newNameInput.value = newName;
                    form.appendChild(newNameInput);

                    document.body.appendChild(form);
                    form.submit();
                }
            }
        }
    </script>
}
