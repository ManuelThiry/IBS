@page
@using IBS_Europe.App.Resources
@model IBS_Europe.App.Pages.Solutions

@{
    ViewData["Title"] = SharedResource.S_Title;
    @Html.Partial("_AddProductModal", Model.Edit);
    @Html.Partial("_EditProductModal", Model.Edit);
    @Html.Partial("_DeleteConfirmationModal");
}

<div>
 <div class="d-flex justify-content-center align-items-center mt-3 sticky-top">
     <div class="position-relative">
         <input type="text" id="searchInput" class="form-control pe-5" placeholder="@SharedResource.S_Looking" 
                aria-label="Search" oninput="filterProducts()">
         <i class="fas fa-search position-absolute" style="right: 12px; top: 50%; transform: translateY(-50%); color: #6c757d;" id="searchIcon"></i>
         <i class="fas fa-times position-absolute" style="right: 12px; top: 50%; transform: translateY(-50%); color: #6c757d; cursor: pointer; display: none;" id="clearSearch" onclick="resetSearch()"></i>
     </div>



        @if (User.Identity.IsAuthenticated && Thread.CurrentThread.CurrentCulture.Name == "fr-FR")
        {
            <form method="post" asp-page-handler="AddButton">
                <button class="button-1 ms-3">
                    @SharedResource.S_AddSolution
                </button>
            </form>
        }
    </div>

    <div class="product-container mt-3">
        @if (Model.ProductsList.Count == 0)
                {
                    <div class="alert alert-info mt-5" role="alert">
                        @SharedResource.S_NoProducts
                    </div>
                }
        <div id="noSol" class="alert alert-danger mt-5 d-none" role="alert">
            @SharedResource.S_NoLooking
        </div>
        
        @foreach (var product in Model.ProductsList)
        {
            <div class="product-card border-black border-1">
                <a asp-page="/SolutionDetails" asp-route-name="@product.Name" class="text-decoration-none" onclick="saveScrollPosition()">
                    @if (User.Identity.IsAuthenticated && Thread.CurrentThread.CurrentCulture.Name == "fr-FR")
                        {
                            <form method="post" enctype="multipart/form-data" asp-page-handler="SwitchImage" id="form-@product.Name">
                                <input type="hidden" id="name" name="name" value="@product.Name"/>
                                <input type="file" id="fileInput-@product.Name" name="Edit.Image" onchange="submitForm('@product.Name')" style="display:none;"  accept=".png, .jpeg, .jpg"/>
                                <div class="d-flex justify-content-center">
                                    <img class="no_link" src="@product.Image" alt="@product.Name" style="cursor: pointer;" onclick="document.getElementById('fileInput-@product.Name').click()"/>
                                </div>
                                <span asp-validation-for="Edit.Image" class="text-danger"></span>
                            </form>

                        }
                    else
                    {
                        <img src="@product.Image" alt="@product.Name" title="@product.Name">
                    }
                    
                    <h5 class="title fw-bold">@product.Name</h5>
                    <p class="text-muted" style="min-height: 9em;">@product.SmallDescription</p>
                    @if (User.Identity.IsAuthenticated && Thread.CurrentThread.CurrentCulture.Name == "fr-FR")
                    {

                        <div class="d-flex align-items-center justify-content-center mb-1">
                            <!-- Flèche gauche -->
                            <form method="post" asp-page-handler="Switch" class="d-inline">
                                <input type="hidden" name="direction" value="left"/>
                                <input type="hidden" name="priority" value="@product.Priority"/>
                                <button type="submit" class="btn btn-primary btn-sm me-4">
                                    <i class="fas fa-chevron-left"></i>
                                </button>
                            </form>

                            <!-- Bouton Edit -->
                            <form method="post" asp-page-handler="EditButton">
                                <input type="hidden" name="name" value="@product.Name"/>
                                <button type="submit" class="btn btn-warning btn-sm me-2">
                                    <i class="fas fa-edit"></i>
                                </button>
                            </form>

                            <!-- Bouton Supprimer -->
                            <button onclick="openDeleteModal('@Html.Raw(product.Name)')" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal" type="button" class="btn btn-danger btn-sm me-4 no_link">
                                <i class="fas fa-trash"></i>
                            </button>

                            <!-- Flèche droite -->
                            <form method="post" asp-page-handler="Switch" class="d-inline">
                                <input type="hidden" name="direction" value="right"/>
                                <input type="hidden" name="priority" value="@product.Priority"/>
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fas fa-chevron-right"></i>
                                </button>
                            </form>
                        </div>
                    }

                </a>
            </div>
        }
    </div>
</div>

<style>
    .product-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 1rem; /* Espace entre les cartes */
    }

    .product-card {
        flex: 1 1 calc(100% - 1rem); /* 25% de la largeur avec un espace de 1rem entre les cartes */
        max-width: 25em; /* Largeur max pour éviter le débordement */
        text-align: center;
    }
    
    .product-card h5 {
        color: midnightblue;
    }
    
    .product-card:hover {
      background-color: midnightblue;
      }
      
      .product-card:hover h5, .product-card:hover p {
        color: white;
        }

    .product-card img {
        width: 100%; /* L'image remplit la largeur du conteneur */
        height: 15em;
        max-height: 18em; /* Hauteur maximale de l'image */
        background-size: cover; 
        
    }

    .product-card h5, .product-card p {
        margin: 0.5rem 0; 
    }
</style>





@section Scripts {
    <script>
      function filterProducts() {
          let input = document.getElementById("searchInput").value.toLowerCase();
          let productCards = document.getElementsByClassName("product-card");
          let resultsFound = false;
          let noSol = document.getElementById("noSol");
          const searchInput = document.getElementById("searchInput").value.toLowerCase();
          document.cookie = `searchInputSolution=${searchInput}; path=/; max-age=1800;`;
      
          // Contrôler l'affichage de la loupe et de la croix
          const searchIcon = document.getElementById("searchIcon");
          const clearSearchButton = document.getElementById("clearSearch");
      
          if (input) {
              searchIcon.style.display = "none"; // Masquer la loupe
              clearSearchButton.style.display = "block"; // Afficher la croix
          } else {
              searchIcon.style.display = "block"; // Afficher la loupe
              clearSearchButton.style.display = "none"; // Masquer la croix
          }
      
          for (let i = 0; i < productCards.length; i++) {
              let productName = productCards[i].getElementsByClassName("title")[0].textContent.toLowerCase();
              if (productName.includes(input)) {
                  productCards[i].style.display = "";
                  resultsFound = true;
              } else {
                  productCards[i].style.display = "none";
              }
          }
      
          if (!resultsFound && input !== "" && @Model.ProductsList.Count > 0) {
              noSol.classList.remove("d-none");
          } else {
              noSol.classList.add("d-none");
          }
      }
     

      

        
        $(document).ready(function () {
                            // Empêcher la redirection lorsqu'on clique sur le bouton de suppression, la flèche vers le haut et la flèche vers le bas
                            $(document).on('click', '.no_link', function (event) {
                                event.preventDefault();  // Empêche l'action par défaut (dans ce cas, l'ouverture du lien)
                                event.stopPropagation(); // Empêche la propagation vers l'élément parent <a>
                        
                                // Vous pouvez ajouter ici le code pour gérer la suppression ou le déplacement si nécessaire
                            });
                            
                        
                            // Vous pouvez ajouter d'autres logiques pour les autres boutons ou actions ici
                        });

        $(document).ready(function () {
            var isAddProduct = '@Model.IsNew';
            var isEditProduct = '@Model.IsUpdate';

            if (isAddProduct === 'True') {
                var modal = new bootstrap.Modal(document.getElementById('addProductModal'));
                modal.show();
            }
            if (isEditProduct === 'True') {
                var modal = new bootstrap.Modal(document.getElementById('editProductModal'));
                modal.show();
            }
        });

        function openDeleteModal(name) {
            document.getElementById("productName").value = name;
        }
        
          function submitForm(productName) {
              var form = document.getElementById('form-' + productName);
              var fileInput = document.getElementById('fileInput-' + productName);
              var filePath = fileInput.value;
          
              if (filePath) {
                  form.submit();
              }
          }
          
          function resetSearch() {
              document.getElementById("searchInput").value = ''; // Réinitialiser le champ de recherche
              filterProducts(); // Revenir à l'affichage initial des produits
          }


        
      function saveScrollPosition() {
          const scrollPosition = window.scrollY; // Position verticale actuelle
          localStorage.setItem('scrollPosition', scrollPosition); // Stocker dans localStorage
      }
       
      document.addEventListener('DOMContentLoaded', () => {
              const scrollPosition = localStorage.getItem('scrollPosition');
              if (scrollPosition) {
                  window.scrollTo(0, parseInt(scrollPosition, 10)); // Rétablir la position
                  localStorage.removeItem('scrollPosition'); // Nettoyer après utilisation
              }
          });
        
        function getCookie(name) {
                    const value = `; ${document.cookie}`;
                    const parts = value.split(`; ${name}=`);
                    if (parts.length === 2) return parts.pop().split(';').shift();
                    return "";
                }
                
                // Au chargement de la page, applique la recherche enregistrée dans le cookie
                document.addEventListener("DOMContentLoaded", () => {
                    const savedSearch = getCookie("searchInputSolution");
                    if (savedSearch) {
                        const searchInputElement = document.getElementById("searchInput");
                        searchInputElement.value = savedSearch;
                        filterProducts();
                    }
                });
        
        
    </script>
}
