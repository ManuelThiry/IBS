@page
@using IBS_Europe.App.Resources
@model IBS_Europe.App.Pages.Contact

@{
    ViewData["Title"] = "Contact";
    @Html.Partial("_EditInformationsModal", Model)
    @Html.Partial("_DeleteConfirmationModal");
}

<section id="contact" class="container p-4" xmlns="http://www.w3.org/1999/html">
    <div class="row">
        <!-- Colonne gauche : Formulaire de contact -->
        <div class="col-md-6">
            <h3 class="mb-4">@SharedResource.C_Contact</h3>
            
            @if (Model.Success)
                {
                    <div class="alert alert-success" role="alert">
                        @SharedResource.Co_SuccessM
                    </div>
                }
             @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @TempData["ErrorMessage"]
                    </div>
                }
            
           <form method="post" enctype="multipart/form-data">
               <div class="row">
                   <div class="col-md-6 mb-3">
                       <label for="firstname" class="form-label">@SharedResource.Co_Firstname</label>
                       <input type="text" class="form-control" id="firstname" asp-for="Input.FirstName"/>
                       <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                   </div>
                   <div class="col-md-6 mb-3">
                       <label for="lastname" class="form-label">@SharedResource.Co_Lastname</label>
                       <input type="text" class="form-control" id="lastname" asp-for="Input.LastName"/>
                       <span asp-validation-for="Input.LastName" class="text-danger"></span>
                   </div>
               </div>
           
               <div class="row">
                   <div class="col-md-6 mb-3">
                       <label for="phone" class="form-label">@SharedResource.Co_Number</label>
                       <input type="tel" class="form-control" id="phone" asp-for="Input.Phone"/>
                       <span asp-validation-for="Input.Phone" class="text-danger"></span>
                   </div>
                   <div class="col-md-6 mb-3">
                       <label for="email" class="form-label">@SharedResource.Co_Email</label>
                       <input type="email" class="form-control" id="email" asp-for="Input.Email"/>
                       <span asp-validation-for="Input.Email" class="text-danger"></span>
                   </div>
               </div>
           
               <div class="mb-3">
                   <label for="subject" class="form-label">@SharedResource.Co_Subject</label>
                   <select asp-for="Input.Sort" class="form-select" id="subject">
                       <option value="" disabled selected>@SharedResource.Co_Choose</option>
                       @foreach (var email in Model.EmailList)
                       {
                           <option title="@email.Description" value="@email.Name">@email.Name</option>
                       }
                   </select>
                   <span asp-validation-for="Input.Sort" class="text-danger"></span>
               </div>
           
               <div class="mb-3">
                   <label for="message" class="form-label">@SharedResource.Co_Message</label>
                   <textarea class="form-control" id="message" asp-for="Input.Message" rows="5"></textarea>
                   <span asp-validation-for="Input.Message" class="text-danger"></span>
               </div>
           
               <div class="mb-3">
                   <label for="picture" class="form-label">@SharedResource.Co_File</label>
                   <!-- Utilisation de asp-for pour la cohérence -->
                   <input type="file" class="form-control" id="picture" accept=".png, .jpeg, .jpg, .pdf" aria-label="ahc">
                   <div id="fileList" class="mb-2 mt-2">
                   @if (Model.Input.Images.Count > 0)
                      {
                          foreach (var file in Model.Input.Images)
                          {
                              <div class="mb-1" data-file-name="@file.FileName">
                                  @if (file.Extension == ".pdf")
                                  {
                                      <i class="fas fs-3 fa-file-pdf fa-2x text-danger ms-1"></i>
                                  }
                                  else
                                  {
                                       <img class="w-h-2em" src="@Url.Content(file.FilePath)" alt="Image Preview" />

                                                  
                                  }
               
                                  <span>@file.FileName</span>
                                  
                                    <button type="button" class="btn btn-close btn-sm" onclick="deleteFile('@file.FileName')"></button>
                                  
                              </div>
                              
                          }
                      }
                   </div>
                      <div id="errorList"></div>
               </div>
           
               <button type="submit" class="btn btn-primary">@SharedResource.Co_Send</button>
           </form>

        </div>

        <!-- Colonne droite : Informations principales -->
       <div class="col-md-6">
       
           <!-- Informations sur l'entreprise avec icônes -->
           <div class="text-center">
               <img src="images/IBS-logo-bleu-2_HD.JPG" alt="LinkedIn" style="width: 15em;">
               </div>
                   <div class="company-info p-4 shadow-sm rounded bg-light"
                        style="border: 0.1em solid midnightblue; position: relative; margin-top: 5%; min-height: 11%;">
       
                       @foreach(var info in Model.Informations)
                      {
                          <div class="d-flex justify-content-between align-items-center mb-3">
                              <!-- Partie gauche avec icône et texte -->
                              <div class="d-flex align-items-center">
                                  <!-- Icône -->
                                  <span class="d-flex align-items-center justify-content-center" style="width: 2.5rem;">
                                      @switch ((int)info.Type)
                                      {
                                          case 1:
                                              <i class="fas fa-phone-alt fs-4 text-primary"></i>
                                              break;
                                          case 2:
                                              <i class="fas fa-envelope fs-4 text-primary"></i>
                                              break;
                                          case 3:
                                              <i class="fas fa-map-marker-alt fs-4 text-primary"></i>
                                              break;
                                          default:
                                              <i class="fas fa-info-circle fs-4 text-primary"></i>
                                              break;
                                      }
                                  </span>
                      
                                  <!-- Texte -->
                                  <strong class="ms-2">@info.Description:</strong>
                                  @if ((int)info.Type == 1 || (int)info.Type == 2 || (int)info.Type == 3)
                                  {
                                      <a href="@(
                                         (int)info.Type == 3 ? 
                                         $"https://www.google.com/maps/place/{Uri.EscapeDataString(info.Text)}" :
                                         (int)info.Type == 1 ? 
                                         $"tel:{info.Text}" :
                                         (int)info.Type == 2 ? 
                                         $"mailto:{info.Text}" : 
                                         "#"
                                         )"
                                         target="@((int)info.Type == 3 ? "_blank" : "")"
                                         class="text-decoration-none ms-2" style="font-weight: 600;">
                                          @info.Text
                                      </a>
                                  }
                                  else
                                  {
                                      <span class="text-dark ms-2" style="font-weight: 600;">@info.Text</span>
                                  }
                                  
                                   @if (User.Identity.IsAuthenticated  && Thread.CurrentThread.CurrentCulture.Name == "fr-FR")
                                   {
                                       <form method="post" asp-page-handler="Switch" class="ms-2">
                                           <input type="hidden" name="direction" value="top" />
                                           <input type="hidden" name="priority" value="@info.Priority" />
                                           <button type="submit" class="btn btn-primary btn-sm">
                                               <i class="fas fa-arrow-up"></i>
                                           </button>
                                       </form>
                      
                                       <form method="post" class="ms-2" asp-page-handler="Switch">
                                           <input type="hidden" name="direction" value="bottom" />
                                           <input type="hidden" name="priority" value="@info.Priority" />
                                           <button type="submit" class="btn btn-primary btn-sm">
                                               <i class="fas fa-arrow-down"></i>
                                           </button>
                                       </form>
                                   }
                                                                    
                              </div>
                              
                          </div>
                      }

       
                       @if (User.Identity.IsAuthenticated  && Thread.CurrentThread.CurrentCulture.Name == "fr-FR")
                       {
                           <!-- Bouton d'édition dans le coin inférieur droit -->
                           <button type="button" class="btn button-1" data-bs-toggle="modal"
                                   data-bs-target="#editInformationsModal" style="position: absolute; top: 10px; right: 10px;">
                               <i class="fas fa-edit"></i>
                           </button>
                       }
                   </div>
               </div>
            
            
    </div>
</section>

@section Scripts {
    <script>
   $(document).ready(function () {
       var isAddInformation = '@Model.IsAddInformation';
       if (isAddInformation === 'True') {
           var modal = new bootstrap.Modal(document.getElementById('addInformationModal'));
           modal.show();
       }
   });
   
   $(document).ready(function () {
          var IsAddEmail = '@Model.IsAddEmail';
          if (IsAddEmail === 'True') {
              var modal = new bootstrap.Modal(document.getElementById('addEmailModal'));
              modal.show();
          }
      });
   
    $(document).ready(function () {
             var isOpenInfo = '@Model.isOpenInfo';
             if (isOpenInfo === 'True') {
                 var modal = new bootstrap.Modal(document.getElementById('editInformationsModal'));
                 modal.show();
             }
         });
    
    function openDeleteModal(id) {
       document.getElementById("contactId").value = id;
    }
    
    const fileInput = document.getElementById('picture');
        const fileList = document.getElementById('fileList');
        let selectedFiles = [];
    
        fileInput.addEventListener('change', (event) => {
            // Ajout des nouveaux fichiers au tableau
            Array.from(event.target.files).forEach(file => selectedFiles.push(file));
    
            // Mettre à jour la liste visible des fichiers
            renderFileList();
        });
        
        function getBase64(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result.split(',')[1]); // Supprime le préfixe `data:...;base64,`
                reader.onerror = error => reject(error);
                reader.readAsDataURL(file);
            });
        }
    
       async function renderFileList() {
            const errors = document.getElementById('errorList');
                    errors.innerHTML = '';
       
           for (const [index, file] of selectedFiles.entries()) {
               const fileItem = document.createElement('div');
               fileItem.className = 'd-flex align-items-center gap-2 mt-2';
               fileItem.dataset.index = index;
       
               // Gestion des aperçus (PDF ou image)
               if (file.type === 'application/pdf') {
                   const icon = document.createElement('i');
                   icon.className = 'fas fs-5 fa-file-pdf fa-2x text-danger';
                   fileItem.appendChild(icon);
               } else if (file.type.startsWith('image/')) {
                   const imgPreview = document.createElement('img');
                   imgPreview.className = 'w-h-2em';
                   imgPreview.alt = 'Image Preview';
       
                   const reader = new FileReader();
                   reader.onload = (e) => {
                       imgPreview.src = e.target.result;
                   };
                   reader.readAsDataURL(file);
       
                   fileItem.appendChild(imgPreview);
               }
       
               // Préparer les données à envoyer
              var payload = {
                  FileName: file.name,
                  Base64: await getBase64(file),
                  Extension: file.name.split('.').pop()
              };
              
             $.ajax({
                 url: '@Url.Action("AddFile", "Image")',  // URL de l'action
                 type: 'POST',  // Assurez-vous que la méthode est POST
                 contentType: 'application/json; charset=utf-8',  // Type correct pour JSON
                 data: JSON.stringify(payload),  // Envoi de l'objet JSON
                success: function (response) {
                    
                     if ( response.message !== 0) {
                          // Ajouter un élément pour le nom du fichier
                                             const fileNameSpan = document.createElement('span');
                                             fileNameSpan.textContent = file.name;
                                             fileItem.appendChild(fileNameSpan);
                                         
                                             // Bouton de suppression
                                             const deleteButton = document.createElement('button');
                                             deleteButton.className = 'btn btn-close btn-sm';
                                             fileItem.setAttribute('data-file-name', file.name);
                                             
                                             // Passer l'index ou le nom du fichier dans l'event handler
                                             deleteButton.addEventListener('click', () => {
                                                 event.preventDefault();
                                                 const fileName = file.name; // Nom du fichier à supprimer
                                                 selectedFiles.splice(file);  // Supprimer le fichier du tableau
                                                 deleteFile(fileName);  // Appel de la fonction de suppression
                                             });
                                         
                                             // Ajouter le bouton de suppression avant l'ajout du fichier dans la liste
                                             fileItem.appendChild(deleteButton);
                                         
                                             // Ajouter l'élément à la liste
                                             fileList.appendChild(fileItem);
                                          
                     }
                      const fileIndex = selectedFiles.findIndex(f => f.name === file.name); // Trouver l'index
                                                                     if (fileIndex > -1) {
                                                                         selectedFiles.splice(fileIndex, 1); // Supprimer l'élément de selectedFiles
                                                                     }
                         
                
                },

                error: function (xhr, status, error) {
                        // Vérifier si l'erreur est une BadRequest
                        if (xhr.status === 400) {
                                                                            
                            // Message d'erreur venant du backend
                           // Sélectionner le conteneur d'erreurs
                           const errorList = document.getElementById('errorList');
                           
                           // Créer un nouveau message d'erreur
                           const errorMessage = document.createElement('div');
                           errorMessage.className = 'alert alert-danger'; // Ajout de classes pour le style
                           errorMessage.textContent = xhr.responseJSON?.message || "Une erreur est survenue."; // Message d'erreur avec fallback
                           
                           // Ajouter le message d'erreur au conteneur
                           errorList.appendChild(errorMessage);
                           
                            const fileIndex = selectedFiles.findIndex(f => f.name === file.name); // Trouver l'index
                           if (fileIndex > -1) {
                               selectedFiles.splice(fileIndex, 1); // Supprimer l'élément de selectedFiles
                           }
                        } else {
                            console.error("Erreur : " + error);
                            console.error("Détails : " + xhr.responseText);
                        }
                    }
             });

        }
    }
    
    function deleteFile(name) {
        $.ajax({
            url: '@Url.Action("DeleteFile", "Image")',  // URL de l'action
            type: 'POST',  // Méthode POST
            data: { name: name },  // Envoyer le nom du fichier
            success: function () {
               const fileElement = document.querySelector(`[data-file-name="${name}"]`);
                           if (fileElement) {
                               fileElement.remove(); // Supprimer l'élément du DOM
                           }
            },
            error: function (xhr, status, error) {
                console.error("Erreur : " + error);
                console.error("Détails : " + xhr.responseText);
            }
        });
    }
</script>
}


